'use client';
import { <%- tableName %> } from '@/db/schema';
import { Form } from 'adease';
import { <%- fields.map(field => {
  switch(field.type.toLowerCase()) {
    case 'number': return 'NumberInput';
    case 'date': return 'DateInput';
    case 'boolean': return 'Checkbox';
    default: return 'TextInput';
  }
}).filter((value, index, self) => self.indexOf(value) === index).join(', ') %> } from '@mantine/core';
import { createInsertSchema } from 'drizzle-zod';

type <%- TableName %> = typeof <%- tableName %>.$inferInsert;

type fields = {
  onSubmit: (values: <%- TableName %>) => Promise<<%- TableName %>>;
  defaultValues?: <%- TableName %>;
};

export default function <%- TableName %>Form({ onSubmit, defaultValues }: fields) {
  return (
    <Form 
      action={onSubmit} 
      schema={createInsertSchema(<%- tableName %>)} 
      defaultValues={defaultValues}
    ><% fields.forEach(function(field) { %>
      <% if (field.type.toLowerCase() === 'number') { %>
        <NumberInput name="<%- field.name %>" label="<%- capitalize(asWord(field.name)) %>" />
      <% } else if (field.type.toLowerCase() === 'date') { %>
        <DateInput name="<%- field.name %>" label="<%- capitalize(asWord(field.name)) %>" />
      <% } else if (field.type.toLowerCase() === 'boolean') { %>
        <Checkbox name="<%- field.name %>" label="<%- capitalize(asWord(field.name)) %>" />
      <% } else { %>
        <TextInput name="<%- field.name %>" label="<%- capitalize(asWord(field.name)) %>" />
      <% } %>
    <% }); %>
    </Form>
  );
}