'use server';

import { auth } from '@/auth';
<% if (database === 'drizzle') { %>import { users } from '@/db/schema';<% } %>
<% if (database === 'prisma') { %>import { Prisma } from '@prisma/client';<% } %>

<% if (database === 'drizzle') { %>type Role = (typeof users.$inferSelect)['role'];<% } %>
<% if (database === 'prisma') { %>type Role = Prisma.UserCreateInput['role'];<% } %>

export default async function withAuth<T>(
  fn: () => Promise<T>,
  roles: Role[] = []
) {
  const session = await auth();

  if (!session) {
    throw new Error('Unauthorized');
  }

  if (roles.length && !roles.includes(session?.user?.role)) {
    throw new Error('Unauthorized');
  }

  return await fn();
}